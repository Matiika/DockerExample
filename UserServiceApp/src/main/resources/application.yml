server:
  port: 8080

spring:
  application:
    name: user-service

  kafka:
    bootstrap-servers: ${SPRING_KAFKA_BOOTSTRAP_SERVERS:broker:9092}

    consumer:
      group-id: notification-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: "*"

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME:}
    password: ${SPRING_MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  jpa:
    generate-ddl: true
    show-sql: true

  output:
    ansi:
      enabled: always

eureka:
  client:
    enabled: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://host.docker.internal:8081/eureka}
  register-with-eureka: true
  fetch-registry: true

  instance:
    non-secure-port-enabled: true
    secure-port-enabled: false
    prefer-ip-address: true

logging:
  level:
    root: ${LOGGING_LEVEL_ROOT:WARN}
    org.apache.kafka: INFO
    org.springframework.kafka.listener: DEBUG